#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Oct 29 16:15:49 2021

@author: kasumi
"""
import numpy as np

def courses_cl4(one_based=True):    
    offset=1
    courses_cl4_array=(
        #A1
        [(1,1)], #[N["1,1"],]
        [(2,1)], #[N["2,2"],]
        [(3,1)], #[N["3,3"],]
        [(4,1)], #[N["4,4"],]
        [(1,2)], #[L["1,1"],]
        [(2,2)], #[L["2,2"],]
        [(3,2)], #[L["3,3"],]
        [(4,2)], #[L["4,4"],]
        #A2
        [(1,1),(2,1)], #[N["1,2"],]
        [(2,1),(3,1)], #[N["2,3"],]
        [(3,1),(4,1)], #[N["3,4"],]
        [(1,2),(2,2)], #[L["1,2"],]
        [(2,2),(3,2)], #[L["2,3"],]
        [(3,2),(4,2)], #[L["3,4"],]
        [(1,1),(1,2)], #[M["1,1"],]
        [(2,1),(2,2)], #[M["2,2"],]
        [(3,1),(3,2)], #[M["3,3"],]
        [(4,1),(4,2)], #[M["4,4"],]
        [(1,1),(2,2)], #[M["1,2"],]
        [(2,1),(3,2)], #[M["2,3"],]
        [(3,1),(4,2)], #[M["3,4"],]
        [(1,1),(3,1)], #[N["1,3"],]
        [(2,1),(4,1)], #[N["2,4"],]
        [(1,2),(3,2)], #[L["1,3"],]
        [(2,2),(4,2)], #[L["2,4"],]
        [(1,1),(3,2)], #[M["1,3"],]
        [(2,1),(4,2)], #[M["2,4"],]
        [(1,1),(4,1)], #[N["1,4"],]
        [(1,2),(4,2)], #[L["1,4"],]
        [(1,1),(4,2)], #[M["1,4"],]
        #A3
        [(1,2),(2,2),(2,1)], #[L["1,2"],M["2,2"],]
        [(2,2),(3,2),(3,1)], #[L["2,3"],M["3,3"],]
        [(3,2),(4,2),(4,1)], #[L["3,4"],M["4,4"],]
        [(3,1),(3,2),(1,2)], #[M["3,3"],L["1,3"],]
        [(4,1),(4,2),(2,2)], #[M["4,4"],L["2,4"],]
        [(4,1),(4,2),(1,2)], #[M["4,4"],L["1,4"],]
        [(2,1),(3,2),(1,2)], #[M["2,3"],L["1,3"],]
        [(3,1),(4,2),(2,2)], #[M["3,4"],L["2,4"],]
        [(3,1),(4,2),(1,2)], #[M["3,4"],L["1,4"],]
        [(2,1),(4,2),(1,2)], #[M["2,4"],L["1,4"],]
        #A4
        [(1,1),(2,1),(1,1),(1,2)], #[N["1,2"],N["1,2"],M["1,1"],]
        [(2,1),(3,1),(2,1),(2,2)], #[N["2,3"],N["2,3"],M["2,2"],]
        [(3,1),(4,1),(3,1),(3,2)], #[N["3,4"],N["3,4"],M["3,3"],]
        [(1,2),(2,2),(2,1),(3,1)], #[L["1,2"],M["2,2"],N["2,3"],]
        [(2,2),(3,2),(3,1),(4,1)], #[L["2,3"],M["3,3"],N["3,4"],]
        [(1,2),(2,2),(2,1),(3,2)], #[L["1,2"],M["2,2"],M["2,3"],]
        [(1,2),(2,2),(2,1),(4,1)], #[L["1,2"],M["2,2"],N["2,4"],]
        [(2,2),(3,2),(3,1),(4,2)], #[L["2,3"],M["3,3"],M["3,4"],]
        [(1,1),(1,2),(1,1),(3,1)], #[M["1,1"],M["1,1"],N["1,3"],]
        [(2,1),(2,2),(2,1),(4,1)], #[M["2,2"],M["2,2"],N["2,4"],]
        [(1,2),(2,2),(2,1),(4,2)], #[L["1,2"],M["2,2"],M["2,4"],]
        [(1,1),(1,2),(1,1),(4,1)], #[M["1,1"],M["1,1"],N["1,4"],]
        [(2,1),(3,1),(1,1),(2,2)], #[N["2,3"],N["1,3"],M["1,2"],]
        [(3,1),(4,1),(2,1),(3,2)], #[N["3,4"],N["2,4"],M["2,3"],]
        [(1,2),(2,2),(1,1),(4,1)], #[L["1,2"],M["1,2"],N["1,4"],]
        [(3,1),(3,2),(1,2),(4,2)], #[M["3,3"],L["1,3"],L["1,4"],]
        [(3,1),(4,1),(1,1),(3,2)], #[N["3,4"],N["1,4"],M["1,3"],]
        [(1,1),(2,2),(2,1),(3,1)], #[M["1,2"],M["2,2"],N["2,3"],]
        [(2,1),(3,2),(3,1),(4,1)], #[M["2,3"],M["3,3"],N["3,4"],]
        [(1,2),(3,2),(3,1),(4,1)], #[L["1,3"],M["3,3"],N["3,4"],]
        [(1,1),(2,2),(2,1),(4,1)], #[M["1,2"],M["2,2"],N["2,4"],]
        [(1,2),(3,2),(2,1),(4,1)], #[L["1,3"],M["2,3"],N["2,4"],]
        [(2,1),(3,2),(1,2),(4,2)], #[M["2,3"],L["1,3"],L["1,4"],]
        [(1,1),(3,2),(3,1),(4,1)], #[M["1,3"],M["3,3"],N["3,4"],]
        [(1,1),(3,2),(2,1),(4,1)], #[M["1,3"],M["2,3"],N["2,4"],]
        #A5
        [(2,2),(3,2),(3,1),(4,2),(1,2)], #[L["2,3"],M["3,3"],M["3,4"],L["1,4"],]
        [(3,1),(3,2),(1,2),(4,2),(2,1)], #[M["3,3"],L["1,3"],L["1,4"],M["2,4"],]
        [(2,1),(4,1),(3,1),(3,2),(1,2)], #[N["2,4"],N["3,4"],M["3,3"],L["1,3"],]
        #A6
        [(2,1),(3,1),(2,1),(2,2),(1,1),(4,1)], #[N["2,3"],N["2,3"],M["2,2"],M["1,2"],N["1,4"],]
        [(1,2),(2,2),(2,1),(3,2),(3,1),(4,1)], #[L["1,2"],M["2,2"],M["2,3"],M["3,3"],N["3,4"],]
        [(1,2),(2,2),(2,1),(3,2),(2,1),(4,1)], #[L["1,2"],M["2,2"],M["2,3"],M["2,3"],N["2,4"],]
        [(1,2),(2,2),(2,1),(4,1),(1,1),(3,2)], #[L["1,2"],M["2,2"],N["2,4"],N["1,4"],M["1,3"],]
        [(3,1),(4,1),(2,1),(2,2),(1,2),(3,2)], #[N["3,4"],N["2,4"],M["2,2"],L["1,2"],L["1,3"],]
        [(2,1),(4,1),(3,1),(3,2),(1,2),(4,2)], #[N["2,4"],N["3,4"],M["3,3"],L["1,3"],L["1,4"],]
        [(2,1),(3,2),(1,2),(3,2),(3,1),(4,1)], #[M["2,3"],L["1,3"],L["1,3"],M["3,3"],N["3,4"],]
        [(1,1),(3,2),(1,2),(2,2),(2,1),(4,1)], #[M["1,3"],L["1,3"],L["1,2"],M["2,2"],N["2,4"],]
        )
    if one_based is False:
        courses_cl4_array=[[tuple(np.array(node)-offset) for node in tour] for tour in tours_cl4]
    
    return courses_cl4_array

def courses_cl3(one_based=True):
    raise NotImplementedError("Courses for CL(3) Not implemented yet.")
    offset=1
    courses_cl3_array=(
        )
    if one_based is False:
        courses_cl3=[[tuple(np.array(node)-offset) for node in tour] for tour in tours_cl3]
    
    return courses_cl3


def read_numpy_array(filename):
    return np.load(filename,allow_pickle=True)

def read_numpy_array_from_txt(filename):
    return np.loadtxt(filename,dtype=np.int32)

# import pkgutil

# data = pkgutil.get_data(__name__, "templates/temp_file")

import os
dirname = os.path.dirname(__file__)
filename = os.path.join(dirname, 'data/all_76_order_players.txt')

#coeff_mat = read_numpy_array_from_txt("./data/all_76_order_players.txt").astype(int)
coeff_mat = read_numpy_array_from_txt(filename).astype(int)


